# This is a basic workflow to help you get started with Actions

name: JitPack

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  release:
    types: [published, released]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set env
        run: echo "GIT_TAG=`echo $(git describe --tags --abbrev=0)`" >> $GITHUB_ENV
      - name: test env
        run: echo "$GIT_TAG === $GITHUB_ENV === ${{ env.GIT_TAG }} === ${{ env.GITHUB_ENV }}"
      - name: autojitpack
      # You may pin to the exact commit or the version.
      # uses: badasintended/autojitpack@07e74255c2fe5f3353477da9ee7b5767a87d390c
        uses: badasintended/autojitpack@v1
        with:
          # Released version
          version: ${{ env.GIT_TAG }}
          # Timeout for the request, set to -1 to disable timeout and wait for jitpack to finish building
          timeout: -1 # optional, default is -1
